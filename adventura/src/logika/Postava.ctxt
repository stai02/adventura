#BlueJ class context
comment0.target=Postava
comment0.text=\r\n\ Trieda\ Postava\ -\ popisuje\ jednotliv\u00E9\ postavy\ v\ hre\r\n\r\n\ T\u00E1to\ trieda\ je\ s\u00FA\u010Das\u0165ou\ jednoduchej\ textovej\ hry.\r\n\ \r\n\ S\ postavami\ je\ mo\u017En\u00E9\ komunikova\u0165,\ m\u00F4\u017Eu\ sa\ pohybova\u0165.\r\n\ \r\n\ @author\ \ \ Ivana\ Stanov\u00E1\r\n\ @version\ \ pre\ ZS\ 2017/2018\r\n
comment1.params=meno\ replika\ pociatok
comment1.target=Postava(java.lang.String,\ java.lang.String,\ Prostor)
comment1.text=\r\n\ Vytvorenie\ postavy\ so\ zadanou\ replikou\ a\ po\u010Diato\u010Dnou\ poz\u00EDciou.\r\n\ \r\n\ @param\ meno\ Meno\ postavy.\r\n\ @param\ replika\ Replika,\ ktor\u00FA\ postava\ st\u00E1le\ opakuje.\r\n\ @param\ pociatok\ Po\u010Diato\u010Dn\u00E1\ poz\u00EDcia\ postavy\ (miestnos\u0165).\r\n
comment10.params=
comment10.target=int\ hashCode()
comment10.text=\r\n\ metoda\ hashCode\ vraci\ ciselny\ identifikator\ instance,\ ktery\ se\ pouziva\r\n\ pro\ optimalizaci\ ukladani\ v\ dynamickych\ datovych\ strukturach.\ Pri\r\n\ prekryti\ metody\ equals\ je\ potreba\ prekryt\ i\ metodu\ hashCode.\ Podrobny\r\n\ popis\ pravidel\ pro\ vytvareni\ metody\ hashCode\ je\ u\ metody\ hashCode\ ve\r\n\ tride\ Object\r\n
comment2.params=
comment2.target=java.lang.String\ getMeno()
comment2.text=\r\n\ Met\u00F3da\ vracia\ meno\ postavy\ (bolo\ zadan\u00E9\ pri\ vytv\u00E1ran\u00ED\ postavy\ ako\ parameter\r\n\ kon\u0161truktora)\ \r\n\r\n\ @return\ \ \ \ \ meno\ postavy\r\n
comment3.params=
comment3.target=java.lang.String\ getReplika()
comment3.text=\r\n\ Met\u00F3da\ vracia\ repliku\ postavy\ (bola\ zadan\u00E1\ pri\ vytv\u00E1ran\u00ED\ postavy\ ako\ parameter\r\n\ kon\u0161truktora)\ \r\n\r\n\ @return\ \ \ \ \ replika,\ ktor\u00FA\ postava\ opakuje\r\n
comment4.params=
comment4.target=Prostor\ getAktMiestnost()
comment4.text=\r\n\ Met\u00F3da\ vracia\ aktu\u00E1lnu\ poz\u00EDciu\ postavy\ (bola\ zadan\u00E1\ pri\ vytv\u00E1ran\u00ED\ postavy\ ako\ parameter\r\n\ kon\u0161truktora)\ \r\n\r\n\ @return\ \ \ \ \ aktu\u00E1lna\ miestnos\u0165,\ v\ ktorej\ sa\ postava\ nach\u00E1dza\r\n
comment5.params=miestnost
comment5.target=void\ setAktMiestnost(Prostor)
comment5.text=\r\n\ Met\u00F3da\ nastav\u00ED\ aktu\u00E1lnu\ poz\u00EDciu\ postavy.\r\n\r\n\ @param\ \ \ \ \ miestnost\ miestnos\u0165,\ do\ ktorej\ postavu\ umiestnime\r\n
comment6.params=prostor
comment6.target=void\ pridajMiestnost(Prostor)
comment6.text=\r\n\ Met\u00F3da\ prid\u00E1\ v\u0161etky\ pr\u00EDpustn\u00E9\ miestnosti\ do\ zoznamu.\ \r\n\r\n\ @param\ dalsie\ Nula\ a\ viac\ priestorov,\ kam\ postava\ m\u00F4\u017Ee\ vst\u00FApi\u0165.\r\n
comment7.params=
comment7.target=java.util.List\ getMiestnosti()
comment7.text=\r\n\ Met\u00F3da\ vr\u00E1ti\ v\u0161etky\ pr\u00EDpustn\u00E9\ miestnosti\ zo\ zoznamu.\ \r\n\r\n\ @return\ List<Prostor>\ Zoznam\ priestorov,\ kam\ postava\ m\u00F4\u017Ee\ vst\u00FApi\u0165.\r\n
comment8.params=
comment8.target=void\ prejdi()
comment8.text=\r\n\ Postava\ prelet\u00ED\ do\ n\u00E1hodnej\ p\u00EDpustnej\ miestnosti,\ \r\n\ bez\ oh\u013Eadu\ na\ existenciu\ dver\u00ED\ \u010Di\ prechodov.\r\n
comment9.params=o
comment9.target=boolean\ equals(java.lang.Object)
numComments=11
